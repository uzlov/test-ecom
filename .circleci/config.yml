# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  test:
    docker:
      - image: circleci/node:8.11.2
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn lint
  build:
    docker:
      - image: circleci/node:8.11.2
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run build!
      - run: yarn build

      - save_cache:
          paths:
            - dist
          key: v1-dependencies-dist

  deploy:
    docker:
      - image: my-awscli-image:1.0
    working_directory: ~/repo
    steps:
      - checkout

      # Restore folder "dist", which we built in previous task.
      - restore_cache:
          keys:
          - v1-dependencies-dist

      - run:
          name: install aws-cli
          command: |
            sudo apt-get update
            sudo apt-get install -y python-pip python-dev
            sudo pip install awscli
            aws --version

      - run:
          name: Deploy Master to AWS
          command: |
            aws s3 sync --acl public-read --sse --delete dist/ s3://app-staging.e-commerce.cx

workflows:
  version: 2
  build_and_test:
    jobs:
#      - test
      - build
      - deploy:
          requires:
            - build
#      - build:
#          requires:
#            - test
